// Factory Pattern Example
// Demonstrates the Factory design pattern with product hierarchy

diagram "Factory Pattern" {
  direction: TB
  
  // Product interface
  shape IButton as @class label:"IButton"
    stereotype:"interface"
    methods:[
      {name:"render" returnType:"void" visibility:public},
      {name:"onClick" params:[{name:"handler" type:"EventHandler"}] returnType:"void" visibility:public}
    ]
  
  // Concrete products
  shape WindowsButton as @class label:"WindowsButton"
    attributes:[
      {name:"style" type:"WindowsStyle" visibility:private}
    ]
    methods:[
      {name:"render" returnType:"void" visibility:public},
      {name:"onClick" params:[{name:"handler" type:"EventHandler"}] returnType:"void" visibility:public}
    ]
  
  shape MacButton as @class label:"MacButton"
    attributes:[
      {name:"theme" type:"MacTheme" visibility:private}
    ]
    methods:[
      {name:"render" returnType:"void" visibility:public},
      {name:"onClick" params:[{name:"handler" type:"EventHandler"}] returnType:"void" visibility:public}
    ]
  
  shape LinuxButton as @class label:"LinuxButton"
    attributes:[
      {name:"desktop" type:"string" visibility:private}
    ]
    methods:[
      {name:"render" returnType:"void" visibility:public},
      {name:"onClick" params:[{name:"handler" type:"EventHandler"}] returnType:"void" visibility:public}
    ]
  
  // Factory interface
  shape IButtonFactory as @class label:"IButtonFactory"
    stereotype:"interface"
    methods:[
      {name:"createButton" returnType:"IButton" visibility:public}
    ]
  
  // Concrete factories
  shape WindowsFactory as @class label:"WindowsFactory"
    methods:[
      {name:"createButton" returnType:"IButton" visibility:public}
    ]
  
  shape MacFactory as @class label:"MacFactory"
    methods:[
      {name:"createButton" returnType:"IButton" visibility:public}
    ]
  
  shape LinuxFactory as @class label:"LinuxFactory"
    methods:[
      {name:"createButton" returnType:"IButton" visibility:public}
    ]
  
  // Client class
  shape Application as @class label:"Application"
    attributes:[
      {name:"factory" type:"IButtonFactory" visibility:private},
      {name:"button" type:"IButton" visibility:private}
    ]
    methods:[
      {name:"initialize" params:[{name:"factory" type:"IButtonFactory"}] returnType:"void" visibility:public},
      {name:"createUI" returnType:"void" visibility:public}
    ]
  
  // Product hierarchy
  WindowsButton -> IButton lineStyle:dashed
  MacButton -> IButton lineStyle:dashed
  LinuxButton -> IButton lineStyle:dashed
  
  // Factory hierarchy
  WindowsFactory -> IButtonFactory lineStyle:dashed
  MacFactory -> IButtonFactory lineStyle:dashed
  LinuxFactory -> IButtonFactory lineStyle:dashed
  
  // Dependencies
  Application.factory -> IButtonFactory
  Application.button -> IButton
  
  // Factory creates products (dashed with label)
  WindowsFactory -creates-> WindowsButton lineStyle:dashed
  MacFactory -creates-> MacButton lineStyle:dashed
  LinuxFactory -creates-> LinuxButton lineStyle:dashed
}
